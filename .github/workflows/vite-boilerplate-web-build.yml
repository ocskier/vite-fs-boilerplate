name: Build and Deploy app artifacts - QA / Staging / PROD
run-name: Build / Deploy ${{github.run_id}}.${{github.run_attempt}} - Create web artifacts

on:
  push:
    branches:
      - main
      - "release/**"
  workflow_dispatch:

env:
  HTTPS: ${{secrets.HTTPS}}
  VITE_SSO_OAUTH_CLIENT_ID: ${{secrets.VITE_SSO_OAUTH_CLIENT_ID}}
  VITE_SSO_OAUTH_SCOPE: ${{secrets.VITE_SSO_OAUTH_SCOPE}}
  SASS_PATH: ${{secrets.SASS_PATH}}

jobs:
  test-trigger:
    name: Trigger Testing
    runs-on: [X64, macOS, self-hosted] # need to add self-hosted runner after docker install
    steps:
      - uses: actions/checkout@v3

      - name: Test
        if: env.HTTPS
        run: echo Injected environment variables

  qa:
    name: Build QA
    environment: qa
    runs-on: [X64, macOS, self-hosted] # need to add self-hosted runner after docker install
    # container:
    #   image: node:20.15-alpine docker container image not avail on self-hosted runner
    env:
      VITE_BASE_URL: ${{secrets.VITE_BASE_URL}}
      VITE_ENV: ${{secrets.VITE_ENV}}
      VITE_SSO_URL: ${{secrets.VITE_SSO_URL}}
      VITE_SSO_REDIRECT_URL: ${{secrets.VITE_SSO_REDIRECT_URL}}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Inject env vars
        if: env.VITE_ENV
        run: echo Injected environment variables

      - name: Build client
        run: |
          cd client

      - name: npm install
        run: |
          npm ci

      - name: npm build
        run: |
          npm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: qa-build
          path: .

  staging:
    name: Build Staging
    environment: staging
    runs-on: [X64, macOS, self-hosted] # need to add self-hosted runner after docker install
    # container:
    #   image: node:20.15-alpine
    env:
      VITE_BASE_URL: ${{secrets.VITE_BASE_URL}}
      VITE_ENV: ${{secrets.VITE_ENV}}
      VITE_SSO_URL: ${{secrets.VITE_SSO_URL}}
      VITE_SSO_REDIRECT_URL: ${{secrets.VITE_SSO_REDIRECT_URL}}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Inject env vars
        if: env.VITE_ENV
        run: echo Injected environment variables

      - name: Build client
        run: |
          cd client

      - name: npm install
        run: |
          npm ci

      - name: npm build
        run: |
          npm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: staging-build
          path: .

  prod:
    name: Build PROD
    environment: prod
    runs-on: [X64, macOS, self-hosted] # need to add self-hosted runner after docker install
    # container:
    #   image: node:20.15-alpine
    env:
      VITE_BASE_URL: ${{secrets.VITE_BASE_URL}}
      VITE_ENV: ${{secrets.VITE_ENV}}
      VITE_SSO_URL: ${{secrets.VITE_SSO_URL}}
      VITE_SSO_REDIRECT_URL: ${{secrets.VITE_SSO_REDIRECT_URL}}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Inject env vars
        if: env.VITE_ENV
        run: echo Injected environment variables

      - name: Build client
        run: |
          cd client

      - name: npm install
        run: |
          npm ci

      - name: npm build
        run: |
          npm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: prod-build
          path: .

  deploy-qa:
    name: Deploy QA
    needs: [qa, staging, prod]
    environment: qa-release
    runs-on: [X64, macOS, self-hosted]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: qa-build
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts/qa-build

      - name: "Deploy to Azure WebApp"
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./artifacts

  deploy-staging:
    name: Deploy Staging
    needs: [deploy-qa]
    environment: staging-release
    runs-on: [X64, macOS, self-hosted]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: staging-build
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

  deploy-prod:
    name: Deploy PROD
    needs: [deploy-staging]
    environment: prod-release
    if: vars.PROD_ENABLED
    runs-on: [X64, macOS, self-hosted]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: prod-build
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

